/*******************************************************************
 * Created by the JDE: Thu Jun 11 19:23:38 AEST 2015
 * WARNING: If you are editing this file from outside the JDE, you
 * should make sure to load the changes back into the JDE by setting
 * the preference "Check for outside changes..." in the "Text Editor"
 * preference tab or reload the component manually.
 * Otherwise you will lose your changes next time the file is generated.
 *******************************************************************/

package io.github.agentsoz.bushfire.jack.agents;

import io.github.agentsoz.bushfire.bdi.IBdiConnector;
import io.github.agentsoz.bushfire.jack.events.EvacHouse;
import io.github.agentsoz.bushfire.jack.events.EvacMessage;
import io.github.agentsoz.bushfire.jack.plans.EvacHouse_metaplan;
import io.github.agentsoz.bushfire.jack.plans.EvacMessageP;
import io.github.agentsoz.bushfire.jack.plans.ImmediateEvac;
import io.github.agentsoz.bushfire.jack.plans.PckupKids;
import io.github.agentsoz.bushfire.jack.plans.PickupRelatives;
import io.github.agentsoz.abmjack.shared.ActionManager;
import io.github.agentsoz.bdiabm.data.ActionContent.State;
import io.github.agentsoz.abmjack.env.GenericActions;
import io.github.agentsoz.abmjack.env.GenericActGoal;
import io.github.agentsoz.abmjack.env.UpdateAction;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import io.github.agentsoz.abmjack.shared.GlobalTime;
import java.util.List;
import java.util.Random;

/**
 * @author Sewwandi Perera
 */
public agent BasicResident extends Agent {
    #posts event EvacHouse p_EvacHouse;
   	#posts event UpdateAction updateaction_p;
   	#posts event GenericActGoal genericactgoal_p;
	
  	#has capability GenericActions genericactions_cap;
  	
    #handles event EvacMessage;
    #handles event PlanChoice;
    #handles event EvacHouse;
    #uses plan EvacMessageP;
    #uses plan EvacHouse_metaplan;
    #uses plan PckupKids;
    #uses plan PickupRelatives;
    #uses plan ImmediateEvac;
    
    final Logger logger = LoggerFactory.getLogger("");
   	public ActionManager actionManager;
   	public boolean kidsNeedPickup;
   	public boolean relsNeedPickup;
   	public String  id;
  	public String  homeRegion;
   	public double[]  currentDestination;
   	public double[] currentStartLocation;
	public double[] startLocation;
    public IBdiConnector bdiConnector;
   	public List    evacRoute;
   	public List waypointNames;
   	public int evacDelay;
	
    public BasicResident(String name, ActionManager am, IBdiConnector bdiConnector, boolean getKids, boolean getRels)
    {
        super(name);
        id = name;
      	this.actionManager = am;
      	this.bdiConnector = bdiConnector;
      	this.kidsNeedPickup = getKids;
      	this.relsNeedPickup = getRels;
      	//this.startLocation = startCoords;
      	//this.homeRegion = region;
      	logger.debug("Agent " + id + " initialised; {} ;", 
    		  (getKids ? "has kids; " : "no kids; ") + (getRels ? "has relatives" : "no relatives"));
    	currentDestination = new double[2];
    	
    	Random r = new Random();
    	evacDelay = r.nextInt(1800);
    }
    
    public void setDestination( double[] dest ) {
      currentStartLocation = currentDestination;
      currentDestination = dest;
   	}
   	
   	public ActionManager getActionManager() {
      	return actionManager;
   	}

   	public double[] getStartLocation() {
		return startLocation;
   	}
   	
   	public void updateActionState(String actionID, State state, Object[] params) {
      	postEvent(updateaction_p.postEvent(actionID, state, params));
   	}
   	
   	public long getCurrentTime(){
        return GlobalTime.time.getTime();
    }
    
    public void fireAlert(List evacRoute, List waypointNames){
    	this.evacRoute = evacRoute;
    	this.waypointNames = waypointNames;
    	postEvent(p_EvacHouse.post());
    }
}

