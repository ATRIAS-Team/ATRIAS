/*******************************************************************
 * Created by the JDE: Thu Jun 11 19:23:38 AEST 2015
 * WARNING: If you are editing this file from outside the JDE, you
 * should make sure to load the changes back into the JDE by setting
 * the preference "Check for outside changes..." in the "Text Editor"
 * preference tab or reload the component manually.
 * Otherwise you will lose your changes next time the file is generated.
 *******************************************************************/

package io.github.agentsoz.bushfire.jack.plans;

import io.github.agentsoz.bushfire.jack.agents.EvacController;
import io.github.agentsoz.bushfire.jack.data.Areas;
import io.github.agentsoz.bushfire.jack.events.Calc_viable_sheltersG;
import io.github.agentsoz.bushfire.jack.events.Decide_routeG;
import io.github.agentsoz.bushfire.jack.events.Decide_shelterG;
import io.github.agentsoz.bushfire.jack.events.DoScheduleG;
import io.github.agentsoz.bushfire.jack.events.PlanAllAreasG;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author Sewwandi Perera
 */
public plan PlanAreasP extends Plan {

    #handles event PlanAllAreasG ev;
    #posts event DoScheduleG p_DoScheduleG;
    #posts event Decide_shelterG p_Decide_shelterG;
    #posts event Decide_routeG p_Decide_routeG;
    #posts event Calc_viable_sheltersG p_Calc_viable_sheltersG;
    #uses interface EvacController enc;
    #uses data Areas areas;
    final Logger logger = LoggerFactory.getLogger("");
    
    static boolean relevant(PlanAllAreasG ev)
    {
        return true;
    }
    
    context()
    {
        true;
    }
    
    #reasoning method
    body()
    {
        logger.trace("PlanAreasP is initiated");
        @subtask(p_Calc_viable_sheltersG.post());
        
        //Query and get all areas configured in the application
        List areaNames = areas.getAllAreaNames();
        
        for(int i = 0 ; i < areaNames.size() ; i++){
            @subtask(p_Decide_shelterG.post(areaNames.get(i).toString()));
            @subtask(p_Decide_routeG.post(areaNames.get(i).toString()));
        }
        
        @subtask(p_DoScheduleG.post());
    }
    

}

