2017-10-31 11:13:17,153  INFO Gbl:57 JVM: 1.8.0_131; Oracle Corporation; mixed mode; 64-bit
2017-10-31 11:13:17,153  INFO Gbl:61 OS: Mac OS X; 10.12.6; x86_64
2017-10-31 11:13:17,153  INFO Gbl:64 CPU cores: 8
2017-10-31 11:13:17,153  INFO Gbl:65 max. Memory: 3641.0MB (3817865216B)
2017-10-31 11:13:17,154  INFO Gbl:103 MATSim-Build: r${buildNumber} (${timestamp})
2017-10-31 11:13:17,154  INFO AbstractController:58 Used Controler-Class: org.matsim.core.controler.NewControler
2017-10-31 11:13:17,154  INFO Config:536 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2017-10-31 11:13:17,154  INFO EventsManagerImpl:144 adding Event-Handler: io.github.agentsoz.bdimatsim.AgentActivityEventHandler
2017-10-31 11:13:17,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2017-10-31 11:13:17,155  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2017-10-31 11:13:17,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2017-10-31 11:13:17,155  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2017-10-31 11:13:17,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2017-10-31 11:13:17,155  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2017-10-31 11:13:17,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2017-10-31 11:13:17,155  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2017-10-31 11:13:17,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2017-10-31 11:13:17,155  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2017-10-31 11:13:17,155  INFO EventsManagerImpl:156 
2017-10-31 11:13:17,156  INFO EventsManagerImpl:144 adding Event-Handler: io.github.agentsoz.bdimatsim.AgentActivityEventHandler
2017-10-31 11:13:17,156  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2017-10-31 11:13:17,156  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2017-10-31 11:13:17,156  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2017-10-31 11:13:17,156  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2017-10-31 11:13:17,156  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2017-10-31 11:13:17,156  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2017-10-31 11:13:17,156  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2017-10-31 11:13:17,156  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2017-10-31 11:13:17,156  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2017-10-31 11:13:17,157  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2017-10-31 11:13:17,157  INFO EventsManagerImpl:156 
2017-10-31 11:13:17,157  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=83, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,157  INFO Injector:78    -> of(io.github.agentsoz.bdimatsim.MATSimModel$1$1@79207381)
2017-10-31 11:13:17,158  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=83, type=MULTIBINDER, keyType=)], source=io.github.agentsoz.bdimatsim.MATSimModel$1.install(MATSimModel.java:198), instance=io.github.agentsoz.bdimatsim.MATSimModel$1$1@79207381}
2017-10-31 11:13:17,159  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=84, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,159  INFO Injector:78    -> of(io.github.agentsoz.bdimatsim.MATSimModel$1$2@491b9b8)
2017-10-31 11:13:17,159  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=84, type=MULTIBINDER, keyType=)], source=io.github.agentsoz.bdimatsim.MATSimModel$1.install(MATSimModel.java:234), instance=io.github.agentsoz.bdimatsim.MATSimModel$1$2@491b9b8}
2017-10-31 11:13:17,159  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=85, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,159  INFO Injector:78    -> of(org.matsim.withinday.mobsim.MobsimDataProvider@1a4927d6)
2017-10-31 11:13:17,159  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=85, type=MULTIBINDER, keyType=)], source=io.github.agentsoz.bdimatsim.MATSimModel$1.install(MATSimModel.java:265), instance=org.matsim.withinday.mobsim.MobsimDataProvider@1a4927d6}
2017-10-31 11:13:17,159  INFO Injector:77 org.matsim.core.events.handler.EventHandler @com.google.inject.multibindings.Element(setName=,uniqueId=82, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,159  INFO Injector:78    -> of(io.github.agentsoz.bdimatsim.AgentActivityEventHandler@5a5a729f)
2017-10-31 11:13:17,159  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.events.handler.EventHandler, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=82, type=MULTIBINDER, keyType=)], source=org.matsim.core.controler.Controler$3$1.install(Controler.java:286), instance=io.github.agentsoz.bdimatsim.AgentActivityEventHandler@5a5a729f}
2017-10-31 11:13:17,159  INFO Injector:77 org.matsim.api.core.v01.Scenario 
2017-10-31 11:13:17,159  INFO Injector:78    -> of(org.matsim.core.scenario.MutableScenario@9cb8225)
2017-10-31 11:13:17,160  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31), instance=org.matsim.core.scenario.MutableScenario@9cb8225}
2017-10-31 11:13:17,160  INFO Injector:77 org.matsim.api.core.v01.network.Network 
2017-10-31 11:13:17,162  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2017-10-31 11:13:17,162  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2017-10-31 11:13:17,162  INFO Injector:77 org.matsim.api.core.v01.population.Population 
2017-10-31 11:13:17,162  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2017-10-31 11:13:17,162  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2017-10-31 11:13:17,162  INFO Injector:77 org.matsim.api.core.v01.population.PopulationFactory 
2017-10-31 11:13:17,163  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2017-10-31 11:13:17,163  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2017-10-31 11:13:17,163  INFO Injector:77 org.matsim.facilities.ActivityFacilities 
2017-10-31 11:13:17,163  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2017-10-31 11:13:17,163  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2017-10-31 11:13:17,163  INFO Injector:77 org.matsim.households.Households 
2017-10-31 11:13:17,163  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2017-10-31 11:13:17,163  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2017-10-31 11:13:17,163  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-10-31 11:13:17,163  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2017-10-31 11:13:17,163  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2017-10-31 11:13:17,163  INFO Injector:77 org.matsim.lanes.data.Lanes 
2017-10-31 11:13:17,164  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2017-10-31 11:13:17,164  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2017-10-31 11:13:17,164  INFO Injector:77 org.matsim.core.controler.ControlerI 
2017-10-31 11:13:17,164  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6c7a164b}[Scopes.SINGLETON]
2017-10-31 11:13:17,164  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8), scope=eager singleton, target=Key[type=org.matsim.core.controler.NewControler, annotation=[none]]}
2017-10-31 11:13:17,164  INFO Injector:77 org.matsim.core.controler.ControlerListenerManager 
2017-10-31 11:13:17,164  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4c2bb6e0[Scopes.SINGLETON]}
2017-10-31 11:13:17,164  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]}
2017-10-31 11:13:17,164  INFO Injector:77 org.matsim.core.controler.PrepareForSim 
2017-10-31 11:13:17,165  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3e62d773}
2017-10-31 11:13:17,165  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]}
2017-10-31 11:13:17,165  INFO Injector:77 org.matsim.core.controler.TerminationCriterion 
2017-10-31 11:13:17,165  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4ef74c30}
2017-10-31 11:13:17,165  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]}
2017-10-31 11:13:17,165  INFO Injector:77 org.matsim.core.controler.MatsimServices 
2017-10-31 11:13:17,165  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7283d3eb}
2017-10-31 11:13:17,165  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]}
2017-10-31 11:13:17,165  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansScoring 
2017-10-31 11:13:17,165  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@638ef7ed[Scopes.SINGLETON]}
2017-10-31 11:13:17,166  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]}
2017-10-31 11:13:17,166  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansReplanning 
2017-10-31 11:13:17,166  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4bff7da0[Scopes.SINGLETON]}
2017-10-31 11:13:17,166  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]}
2017-10-31 11:13:17,166  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansDumping 
2017-10-31 11:13:17,166  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3f1d2e23[Scopes.SINGLETON]}
2017-10-31 11:13:17,166  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]}
2017-10-31 11:13:17,166  INFO Injector:77 org.matsim.core.controler.corelisteners.EventsHandling 
2017-10-31 11:13:17,166  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@536dbea0[Scopes.SINGLETON]}
2017-10-31 11:13:17,166  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]}
2017-10-31 11:13:17,166  INFO Injector:77 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2017-10-31 11:13:17,167  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@47c81abf[Scopes.SINGLETON]}
2017-10-31 11:13:17,167  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]}
2017-10-31 11:13:17,167  INFO Injector:77 org.matsim.core.api.experimental.events.EventsManager 
2017-10-31 11:13:17,167  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@776a6d9b}[Scopes.SINGLETON]
2017-10-31 11:13:17,167  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2017-10-31 11:13:17,167  INFO Injector:77 org.matsim.core.mobsim.framework.Mobsim 
2017-10-31 11:13:17,167  INFO Injector:78    -> Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]
2017-10-31 11:13:17,168  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:27), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]}
2017-10-31 11:13:17,168  INFO Injector:77 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2017-10-31 11:13:17,168  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@21d03963}
2017-10-31 11:13:17,168  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.DefaultQNetworkFactory, annotation=[none]]}
2017-10-31 11:13:17,168  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2017-10-31 11:13:17,168  INFO Injector:78    -> Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2017-10-31 11:13:17,168  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-10-31 11:13:17,168  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2017-10-31 11:13:17,168  INFO Injector:78    -> of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@1f760b47)
2017-10-31 11:13:17,169  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34), instance=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@1f760b47}
2017-10-31 11:13:17,169  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionFactory 
2017-10-31 11:13:17,169  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@18ece7f4}
2017-10-31 11:13:17,169  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]}
2017-10-31 11:13:17,169  INFO Injector:77 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2017-10-31 11:13:17,169  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3cce57c7}
2017-10-31 11:13:17,169  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]}
2017-10-31 11:13:17,169  INFO Injector:77 org.matsim.core.scoring.ExperiencedPlansService 
2017-10-31 11:13:17,169  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1cf56a1c}[Scopes.SINGLETON]
2017-10-31 11:13:17,169  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10), scope=eager singleton, target=Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]}
2017-10-31 11:13:17,169  INFO Injector:77 org.matsim.core.router.MainModeIdentifier 
2017-10-31 11:13:17,170  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@33f676f6}
2017-10-31 11:13:17,170  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2017-10-31 11:13:17,170  INFO Injector:77 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2017-10-31 11:13:17,170  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4c5ae43b[Scopes.SINGLETON]}
2017-10-31 11:13:17,170  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:46), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.FastAStarLandmarksFactory, annotation=[none]]}
2017-10-31 11:13:17,170  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2017-10-31 11:13:17,170  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@1033576a
2017-10-31 11:13:17,171  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@1033576a}
2017-10-31 11:13:17,171  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2017-10-31 11:13:17,171  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@303cf2ba
2017-10-31 11:13:17,171  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@303cf2ba}
2017-10-31 11:13:17,171  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2017-10-31 11:13:17,171  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@76494737
2017-10-31 11:13:17,171  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@76494737}
2017-10-31 11:13:17,171  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2017-10-31 11:13:17,172  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@4a003cbe
2017-10-31 11:13:17,172  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@4a003cbe}
2017-10-31 11:13:17,172  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2017-10-31 11:13:17,172  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@4082ba93
2017-10-31 11:13:17,172  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@4082ba93}
2017-10-31 11:13:17,172  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2017-10-31 11:13:17,172  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@17fc391b
2017-10-31 11:13:17,172  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@17fc391b}
2017-10-31 11:13:17,172  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2017-10-31 11:13:17,172  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@2b30a42c
2017-10-31 11:13:17,172  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@2b30a42c}
2017-10-31 11:13:17,172  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2017-10-31 11:13:17,173  INFO Injector:78    -> org.matsim.core.router.NetworkRouting@609e8838
2017-10-31 11:13:17,173  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRouting@609e8838}
2017-10-31 11:13:17,173  INFO Injector:77 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2017-10-31 11:13:17,173  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@264f218}
2017-10-31 11:13:17,173  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:49), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]}
2017-10-31 11:13:17,173  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=BestScore)
2017-10-31 11:13:17,173  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]
2017-10-31 11:13:17,173  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:79), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]}
2017-10-31 11:13:17,173  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRoute)
2017-10-31 11:13:17,173  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]
2017-10-31 11:13:17,174  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:98), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2017-10-31 11:13:17,174  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=TimeAllocationMutator)
2017-10-31 11:13:17,174  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.TimeAllocationMutator, annotation=[none]]
2017-10-31 11:13:17,174  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=TimeAllocationMutator)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:101), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.TimeAllocationMutator, annotation=[none]]}
2017-10-31 11:13:17,174  INFO Injector:77 org.matsim.core.replanning.ReplanningContext 
2017-10-31 11:13:17,174  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3576ddc2[Scopes.SINGLETON]}[Scopes.SINGLETON]
2017-10-31 11:13:17,174  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:48), scope=eager singleton, target=Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]}
2017-10-31 11:13:17,174  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=65, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-10-31 11:13:17,174  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=65, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]}
2017-10-31 11:13:17,174  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=65, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)]}
2017-10-31 11:13:17,175  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=67, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-10-31 11:13:17,175  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=67, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2017-10-31 11:13:17,175  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=67, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]}
2017-10-31 11:13:17,175  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=69, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-10-31 11:13:17,175  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=69, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.TimeAllocationMutator, annotation=[none]]}
2017-10-31 11:13:17,175  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=69, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=TimeAllocationMutator)]}
2017-10-31 11:13:17,175  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=71, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,175  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=71, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@35b74c5c[Scopes.SINGLETON]}
2017-10-31 11:13:17,175  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=71, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]}
2017-10-31 11:13:17,175  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,175  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2e570ded}
2017-10-31 11:13:17,175  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]}
2017-10-31 11:13:17,176  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=73, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,176  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=73, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@b86de0d}
2017-10-31 11:13:17,176  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=73, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]}
2017-10-31 11:13:17,176  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,176  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@81d9a72}
2017-10-31 11:13:17,176  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]}
2017-10-31 11:13:17,176  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=75, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,176  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=75, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@747f281[Scopes.SINGLETON]}
2017-10-31 11:13:17,176  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=75, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2017-10-31 11:13:17,176  INFO Injector:77 org.matsim.analysis.ScoreStats 
2017-10-31 11:13:17,176  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@747f281[Scopes.SINGLETON]}
2017-10-31 11:13:17,176  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2017-10-31 11:13:17,177  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=76, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,177  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=76, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1169afe1[Scopes.SINGLETON]}
2017-10-31 11:13:17,177  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=76, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]}
2017-10-31 11:13:17,177  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=77, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,177  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=77, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2ca26d77}
2017-10-31 11:13:17,177  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=77, type=MULTIBINDER, keyType=)], source=org.matsim.counts.CountsModule.install(CountsModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]}
2017-10-31 11:13:17,177  INFO Injector:77 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2017-10-31 11:13:17,178  INFO Injector:78    -> @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2017-10-31 11:13:17,178  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link>, annotation=[none]], source=org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup), scope=Scopes.SINGLETON, provider=@Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)}
2017-10-31 11:13:17,178  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=78, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,178  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=78, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@70e38ce1}
2017-10-31 11:13:17,178  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=78, type=MULTIBINDER, keyType=)], source=org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]}
2017-10-31 11:13:17,178  INFO Injector:77 org.matsim.vis.snapshotwriters.SnapshotWriter @com.google.inject.multibindings.Element(setName=,uniqueId=79, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,179  INFO Injector:78    -> Key[type=org.matsim.vis.snapshotwriters.KMLSnapshotWriterFactory, annotation=[none]]
2017-10-31 11:13:17,179  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.vis.snapshotwriters.SnapshotWriter, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=79, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:39), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.KMLSnapshotWriterFactory, annotation=[none]]}
2017-10-31 11:13:17,179  INFO Injector:77 org.matsim.vis.snapshotwriters.SnapshotWriter @com.google.inject.multibindings.Element(setName=,uniqueId=80, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,179  INFO Injector:78    -> Key[type=org.matsim.vis.snapshotwriters.TransimsSnapshotWriterFactory, annotation=[none]]
2017-10-31 11:13:17,179  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.vis.snapshotwriters.SnapshotWriter, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=80, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:42), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.TransimsSnapshotWriterFactory, annotation=[none]]}
2017-10-31 11:13:17,179  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=81, type=MULTIBINDER, keyType=)
2017-10-31 11:13:17,179  INFO Injector:78    -> Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2017-10-31 11:13:17,179  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=81, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:45), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]}
2017-10-31 11:13:17,179  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,179  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@17fc391b}
2017-10-31 11:13:17,180  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2017-10-31 11:13:17,180  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,180  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@303cf2ba}
2017-10-31 11:13:17,180  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2017-10-31 11:13:17,180  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,180  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRouting@609e8838}
2017-10-31 11:13:17,180  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2017-10-31 11:13:17,180  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,180  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@4082ba93}
2017-10-31 11:13:17,181  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2017-10-31 11:13:17,181  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,181  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@1033576a}
2017-10-31 11:13:17,181  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2017-10-31 11:13:17,181  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,181  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@4a003cbe}
2017-10-31 11:13:17,181  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2017-10-31 11:13:17,181  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,181  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@76494737}
2017-10-31 11:13:17,181  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2017-10-31 11:13:17,182  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,182  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@2b30a42c}
2017-10-31 11:13:17,182  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2017-10-31 11:13:17,182  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,182  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-10-31 11:13:17,182  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2017-10-31 11:13:17,182  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:17,182  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@1f760b47}[Scopes.SINGLETON]}
2017-10-31 11:13:17,183  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2017-10-31 11:13:17,183  INFO Injector:77 org.matsim.core.controler.ControlerListenerManagerImpl 
2017-10-31 11:13:17,183  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@4c2bb6e0[Scopes.SINGLETON]
2017-10-31 11:13:17,183  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9), scope=eager singleton}
2017-10-31 11:13:17,183  INFO Injector:77 org.matsim.analysis.IterationStopWatch 
2017-10-31 11:13:17,185  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@2ca923bb[Scopes.SINGLETON]
2017-10-31 11:13:17,185  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.IterationStopWatch, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12), scope=eager singleton}
2017-10-31 11:13:17,186  INFO Injector:77 org.matsim.core.controler.OutputDirectoryHierarchy 
2017-10-31 11:13:17,186  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@13df2a8c[Scopes.SINGLETON]
2017-10-31 11:13:17,186  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.OutputDirectoryHierarchy, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13), scope=eager singleton}
2017-10-31 11:13:17,186  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2017-10-31 11:13:17,186  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1ebea008[Scopes.SINGLETON]
2017-10-31 11:13:17,186  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionsForPopulation, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10), scope=eager singleton}
2017-10-31 11:13:17,186  INFO Injector:77 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2017-10-31 11:13:17,187  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@72d6b3ba[Scopes.SINGLETON]
2017-10-31 11:13:17,187  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2017-10-31 11:13:17,187  INFO Injector:77 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2017-10-31 11:13:17,187  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1787f2a0[Scopes.SINGLETON]
2017-10-31 11:13:17,187  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.SINGLETON}
2017-10-31 11:13:17,187  INFO Injector:77 org.matsim.core.scoring.EventsToActivities 
2017-10-31 11:13:17,187  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7de62196[Scopes.SINGLETON]
2017-10-31 11:13:17,188  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToActivities, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12), scope=eager singleton}
2017-10-31 11:13:17,188  INFO Injector:77 org.matsim.core.scoring.EventsToLegs 
2017-10-31 11:13:17,188  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@163370c2[Scopes.SINGLETON]
2017-10-31 11:13:17,188  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToLegs, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13), scope=eager singleton}
2017-10-31 11:13:17,188  INFO Injector:77 org.matsim.core.router.TripRouter 
2017-10-31 11:13:17,188  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@51bf5add
2017-10-31 11:13:17,188  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43), scope=Scopes.NO_SCOPE}
2017-10-31 11:13:17,188  INFO Injector:77 org.matsim.core.router.SingleModeNetworksCache 
2017-10-31 11:13:17,188  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7905a0b8[Scopes.SINGLETON]
2017-10-31 11:13:17,188  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47), scope=eager singleton}
2017-10-31 11:13:17,189  INFO Injector:77 org.matsim.core.replanning.StrategyManager 
2017-10-31 11:13:17,189  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@35a3d49f[Scopes.SINGLETON]
2017-10-31 11:13:17,189  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.replanning.StrategyManager, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:47), scope=Scopes.SINGLETON}
2017-10-31 11:13:17,189  INFO Injector:77 org.matsim.analysis.CalcLinkStats 
2017-10-31 11:13:17,189  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@389b0789[Scopes.SINGLETON]
2017-10-31 11:13:17,189  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLinkStats, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37), scope=eager singleton}
2017-10-31 11:13:17,189  INFO Injector:77 org.matsim.analysis.LinkStatsControlerListener 
2017-10-31 11:13:17,189  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@35b74c5c[Scopes.SINGLETON]
2017-10-31 11:13:17,189  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46), scope=eager singleton}
2017-10-31 11:13:17,190  INFO Injector:77 org.matsim.analysis.VolumesAnalyzer 
2017-10-31 11:13:17,190  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@13d9cbf5[Scopes.SINGLETON]
2017-10-31 11:13:17,190  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.VolumesAnalyzer, annotation=[none]], source=org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31), scope=eager singleton}
2017-10-31 11:13:17,190  INFO Injector:77 org.matsim.analysis.LegHistogram 
2017-10-31 11:13:17,190  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@478db956
2017-10-31 11:13:17,190  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LegHistogram, annotation=[none]], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30), scope=Scopes.NO_SCOPE}
2017-10-31 11:13:17,190  INFO Injector:77 org.matsim.analysis.CalcLegTimes 
2017-10-31 11:13:17,191  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@6ca18a14[Scopes.SINGLETON]
2017-10-31 11:13:17,191  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLegTimes, annotation=[none]], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31), scope=Scopes.SINGLETON}
2017-10-31 11:13:17,191  INFO Injector:77 org.matsim.analysis.TravelDistanceStats 
2017-10-31 11:13:17,191  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@c667f46[Scopes.SINGLETON]
2017-10-31 11:13:17,191  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.TravelDistanceStats, annotation=[none]], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10), scope=eager singleton}
2017-10-31 11:13:17,191  INFO Injector:77 org.matsim.analysis.ScoreStatsControlerListener 
2017-10-31 11:13:17,191  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@747f281[Scopes.SINGLETON]
2017-10-31 11:13:17,191  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31), scope=Scopes.SINGLETON}
2017-10-31 11:13:17,191  INFO Injector:77 org.matsim.analysis.ModeStatsControlerListener 
2017-10-31 11:13:17,192  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1169afe1[Scopes.SINGLETON]
2017-10-31 11:13:17,192  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31), scope=Scopes.SINGLETON}
2017-10-31 11:13:17,192  INFO Injector:77 org.matsim.counts.CountsModule$CountsInitializer 
2017-10-31 11:13:17,192  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@51bd8b5c[Scopes.SINGLETON]
2017-10-31 11:13:17,192  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.counts.CountsModule$CountsInitializer, annotation=[none]], source=org.matsim.counts.CountsModule.install(CountsModule.java:43), scope=eager singleton}
2017-10-31 11:13:17,202  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2017-10-31 11:13:17,202  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2017-10-31 11:13:17,407  INFO PreProcessDijkstra:118 nodes in dead ends: 9612 (total nodes: 37604). Done in 83 ms
2017-10-31 11:13:17,434  INFO PreProcessLandmarks:112 Putting landmarks on network...
2017-10-31 11:13:17,443  INFO LandmarkerPieSlices:96 Filling sectors...
2017-10-31 11:13:17,505  INFO LandmarkerPieSlices:107 Refining landmarks...
2017-10-31 11:13:17,508  INFO LandmarkerPieSlices:109 done
2017-10-31 11:13:17,509  INFO PreProcessLandmarks:115 done in 74 ms
2017-10-31 11:13:17,509  INFO PreProcessLandmarks:117 Initializing landmarks data
2017-10-31 11:13:17,525  INFO PreProcessLandmarks:129 Calculating distance from each node to each of the 16 landmarks using 8 threads...
2017-10-31 11:13:17,535  INFO PreProcessLandmarks:139 wait for landmarks Calculator to finish...
2017-10-31 11:13:18,106  INFO PreProcessLandmarks:161 done in 581 ms
2017-10-31 11:13:18,133  INFO NetworkImpl:156  node # 1
2017-10-31 11:13:18,133  INFO NetworkImpl:156  node # 2
2017-10-31 11:13:18,133  INFO NetworkImpl:156  node # 4
2017-10-31 11:13:18,134  INFO NetworkImpl:156  node # 8
2017-10-31 11:13:18,134  INFO NetworkImpl:156  node # 16
2017-10-31 11:13:18,134  INFO NetworkImpl:156  node # 32
2017-10-31 11:13:18,134  INFO NetworkImpl:156  node # 64
2017-10-31 11:13:18,134  INFO NetworkImpl:156  node # 128
2017-10-31 11:13:18,134  INFO NetworkImpl:156  node # 256
2017-10-31 11:13:18,135  INFO NetworkImpl:156  node # 512
2017-10-31 11:13:18,135  INFO NetworkImpl:156  node # 1024
2017-10-31 11:13:18,136  INFO NetworkImpl:156  node # 2048
2017-10-31 11:13:18,137  INFO NetworkImpl:156  node # 4096
2017-10-31 11:13:18,140  INFO NetworkImpl:156  node # 8192
2017-10-31 11:13:18,144  INFO NetworkImpl:156  node # 16384
2017-10-31 11:13:18,152  INFO NetworkImpl:156  node # 32768
2017-10-31 11:13:18,154  INFO NetworkImpl:152  link # 1
2017-10-31 11:13:18,155  INFO NetworkImpl:152  link # 2
2017-10-31 11:13:18,155  INFO NetworkImpl:152  link # 4
2017-10-31 11:13:18,155  INFO NetworkImpl:152  link # 8
2017-10-31 11:13:18,156  INFO NetworkImpl:152  link # 16
2017-10-31 11:13:18,156  INFO NetworkImpl:152  link # 32
2017-10-31 11:13:18,156  INFO NetworkImpl:152  link # 64
2017-10-31 11:13:18,157  INFO NetworkImpl:152  link # 128
2017-10-31 11:13:18,159  INFO NetworkImpl:152  link # 256
2017-10-31 11:13:18,162  INFO NetworkImpl:152  link # 512
2017-10-31 11:13:18,166  INFO NetworkImpl:152  link # 1024
2017-10-31 11:13:18,171  INFO NetworkImpl:152  link # 2048
2017-10-31 11:13:18,535  INFO NetworkImpl:152  link # 4096
2017-10-31 11:13:18,546  INFO NetworkImpl:152  link # 8192
2017-10-31 11:13:18,563  INFO NetworkImpl:152  link # 16384
2017-10-31 11:13:18,586  INFO NetworkImpl:152  link # 32768
2017-10-31 11:13:18,624  INFO NetworkImpl:152  link # 65536
2017-10-31 11:13:18,817  INFO PreProcessDijkstra:118 nodes in dead ends: 9612 (total nodes: 37604). Done in 52 ms
2017-10-31 11:13:18,837  INFO PreProcessLandmarks:112 Putting landmarks on network...
2017-10-31 11:13:18,844  INFO LandmarkerPieSlices:96 Filling sectors...
2017-10-31 11:13:18,885  INFO LandmarkerPieSlices:107 Refining landmarks...
2017-10-31 11:13:18,888  INFO LandmarkerPieSlices:109 done
2017-10-31 11:13:18,888  INFO PreProcessLandmarks:115 done in 51 ms
2017-10-31 11:13:18,889  INFO PreProcessLandmarks:117 Initializing landmarks data
2017-10-31 11:13:18,899  INFO PreProcessLandmarks:129 Calculating distance from each node to each of the 16 landmarks using 8 threads...
2017-10-31 11:13:18,901  INFO PreProcessLandmarks:139 wait for landmarks Calculator to finish...
2017-10-31 11:13:19,335  INFO PreProcessLandmarks:161 done in 436 ms
2017-10-31 11:13:19,346  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2017-10-31 11:13:19,353  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2017-10-31 11:13:19,353  INFO ControlerUtils:58 config dump before iterations start
2017-10-31 11:13:19,360  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>

<!-- ====================================================================== -->

	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >

		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="false" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="7200.0" />

		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>

<!-- ====================================================================== -->

<!-- ====================================================================== -->

	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />

		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />

		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />

		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="scenarios/maldon/scenario_matsim_output" />

		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="FastAStarLandmarks" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="googleearth,transims" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="1" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="EPSG:32756" />

		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />

		<param name="randomSeed" value="482564" />
	</module>

<!-- ====================================================================== -->

	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="network" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputChangeEventsFile" value="scenario_matsim_network_change_events.xml" />
		<param name="inputNetworkFile" value="scenario_matsim_network.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- Number of threads for parallel events handler. 0 or null means the framework decides by itself. -->
		<param name="numberOfThreads" value="null" />

		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />

		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />

		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />

			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="work" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="edu" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="car" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="pt" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="bike" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="ride" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="other" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="plans" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />

		<param name="inputPlansFile" value="scenario_matsim_plans.xml" />

		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />

		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="true" />

		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="08:30:00" />
		<param name="flowCapacityFactor" value="1.0" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />

		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />

		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />

		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />

		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />

		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="withHoles" />

		<param name="snapshotperiod" value="00:00:10" />
		<param name="startTime" value="00:00:01" />
		<param name="storageCapacityFactor" value="1.0" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />

		<param name="timeStepSize" value="00:00:01" />

		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />

		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />

		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />

		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />

		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />

		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />

		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="0" />

		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="BestScore" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.8" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="TimeAllocationMutator" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />

		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />

		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />

		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />

		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />

		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="warn" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>

<!-- ====================================================================== -->

</config>

2017-10-31 11:13:19,363  INFO ControlerUtils:63 Complete config dump done.
2017-10-31 11:13:19,363  INFO ControlerUtils:64 Checking consistency of config...
2017-10-31 11:13:19,363  INFO VspConfigConsistencyCheckerImpl:72 running checkConsistency ...
2017-10-31 11:13:19,363  WARN VspConfigConsistencyCheckerImpl:120 You are using a brainExpBeta != 1; vsp default is 1.  (Different values may cause conceptual problems during paper writing.) This means you have to add the following lines to your config file: 
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:122 <module name="planCalcScore">
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:123 	<param name="BrainExpBeta" value="1.0" />
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:124 </module>
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:181 You are not setting fractionOfIterationsToStartScoreMSA; vsp default is to set this to something like 0.8.  This means you have to add the following lines to your config file: 
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:183 <module name="planCalcScore">
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:184 	<param name="fractionOfIterationsToStartScoreMSA" value="0.8" />
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:185 </module>
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:227 found `plansCalcRoute.insertingAccessEgressWalk==false'; vsp should try out `true' and report. 
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:234 found qsim.usePersonIdForMissingVehicleId==true; this is only for backwards compatibility and should rather be set to false
2017-10-31 11:13:19,364  WARN VspConfigConsistencyCheckerImpl:239 found `qsim.usingTravelTimeCheckInTeleporation==false'; vsp should try out `true' and report.
2017-10-31 11:13:19,365  WARN VspConfigConsistencyCheckerImpl:252  found 'qsim.trafficDynamics==queue'; vsp standard is`kinematicWaves'.
2017-10-31 11:13:19,365  WARN VspConfigConsistencyCheckerImpl:275 You have no strategy configured that uses ChangeExpBeta. vsp default is to use ChangeExpBeta at least in one strategy.
2017-10-31 11:13:19,365  WARN VspConfigConsistencyCheckerImpl:282 You have not set fractionOfIterationsToDisableInnovation; vsp default is to set this to 0.8 or similar.  Add the following config lines:
2017-10-31 11:13:19,365  WARN VspConfigConsistencyCheckerImpl:283 <module name="strategy">
2017-10-31 11:13:19,365  WARN VspConfigConsistencyCheckerImpl:284 	<param name="fractionOfIterationsToDisableInnovation" value="0.8" />
2017-10-31 11:13:19,365  WARN VspConfigConsistencyCheckerImpl:285 </module>
2017-10-31 11:13:19,365  INFO ControlerUtils:66 Checking consistency of config done.
2017-10-31 11:13:19,417  INFO NetworkImpl:415 building QuadTree for nodes: xrange(235434.79201289918,277127.0966878375); yrange(5872185.455378804,5931325.163208818)
2017-10-31 11:13:19,443  INFO NetworkImpl:424 Building QuadTree took 0.033 seconds.
2017-10-31 11:13:19,449  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2017-10-31 11:13:19,449  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2017-10-31 11:13:19,449  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2017-10-31 11:13:19,449  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2017-10-31 11:13:19,450  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2017-10-31 11:13:19,451  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2017-10-31 11:13:19,453  INFO Counter:61 [PersonPrepareForSim] handled person # 64
2017-10-31 11:13:19,457  INFO Counter:61 [PersonPrepareForSim] handled person # 128
2017-10-31 11:13:19,461  INFO Counter:61 [PersonPrepareForSim] handled person # 256
2017-10-31 11:13:19,470  INFO Counter:61 [PersonPrepareForSim] handled person # 512
2017-10-31 11:13:19,474  INFO Counter:67 [PersonPrepareForSim] handled person # 600
2017-10-31 11:13:19,475  INFO Counter:61  vehicles # 1
2017-10-31 11:13:19,475  INFO Counter:61  vehicles # 2
2017-10-31 11:13:19,475  INFO Counter:61  vehicles # 4
2017-10-31 11:13:19,475  INFO Counter:61  vehicles # 8
2017-10-31 11:13:19,476  INFO Counter:61  vehicles # 16
2017-10-31 11:13:19,476  INFO Counter:61  vehicles # 32
2017-10-31 11:13:19,476  INFO Counter:61  vehicles # 64
2017-10-31 11:13:19,477  INFO Counter:61  vehicles # 128
2017-10-31 11:13:19,478  INFO Counter:61  vehicles # 256
2017-10-31 11:13:19,479  INFO Counter:61  vehicles # 512
2017-10-31 11:13:19,496  INFO AbstractController:133 ###################################################
2017-10-31 11:13:19,496  INFO AbstractController:134 ### ITERATION 0 BEGINS
2017-10-31 11:13:19,497  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2017-10-31 11:13:19,497  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2017-10-31 11:13:19,497  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2017-10-31 11:13:19,497  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2017-10-31 11:13:19,498  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2017-10-31 11:13:19,511  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2017-10-31 11:13:19,512  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2017-10-31 11:13:19,512  INFO EventsManagerImpl:170 resetting Event-Handlers
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   io.github.agentsoz.bdimatsim.AgentActivityEventHandler
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2017-10-31 11:13:19,513  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2017-10-31 11:13:19,514  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2017-10-31 11:13:19,515  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2017-10-31 11:13:19,516  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2017-10-31 11:13:19,516  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2017-10-31 11:13:19,516  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2017-10-31 11:13:19,516  INFO EventsManagerImpl:156 
2017-10-31 11:13:19,516  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2017-10-31 11:13:19,516  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2017-10-31 11:13:19,516  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2017-10-31 11:13:19,516  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2017-10-31 11:13:19,516  INFO EventsManagerImpl:156 
2017-10-31 11:13:19,517  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2017-10-31 11:13:19,517  INFO PlansDumpingImpl:75 dumping plans...
2017-10-31 11:13:19,524  INFO Counter:61 [PopulationWriter] dumped person # 1
2017-10-31 11:13:19,524  INFO Counter:61 [PopulationWriter] dumped person # 2
2017-10-31 11:13:19,524  INFO Counter:61 [PopulationWriter] dumped person # 4
2017-10-31 11:13:19,525  INFO Counter:61 [PopulationWriter] dumped person # 8
2017-10-31 11:13:19,525  INFO Counter:61 [PopulationWriter] dumped person # 16
2017-10-31 11:13:19,527  INFO Counter:61 [PopulationWriter] dumped person # 32
2017-10-31 11:13:19,529  INFO Counter:61 [PopulationWriter] dumped person # 64
2017-10-31 11:13:19,534  INFO Counter:61 [PopulationWriter] dumped person # 128
2017-10-31 11:13:19,540  INFO Counter:61 [PopulationWriter] dumped person # 256
2017-10-31 11:13:19,547  INFO Counter:61 [PopulationWriter] dumped person # 512
2017-10-31 11:13:19,550  INFO PopulationWriter:139 Population written to: scenarios/maldon/scenario_matsim_output/ITERS/it.0/0.plans.xml.gz
2017-10-31 11:13:19,551  INFO Counter:67 [PopulationWriter] dumped person # 600
2017-10-31 11:13:19,552  INFO PlansDumpingImpl:92 finished plans dump.
2017-10-31 11:13:19,552  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2017-10-31 11:13:19,553  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2017-10-31 11:13:20,050  WARN MGC:175 Assuming that coordinates are in longitude first notation, i.e. (longitude, latitude).
2017-10-31 11:13:20,432  INFO Logger:? dataFileCache open start
2017-10-31 11:13:20,777  WARN MGC:175 Assuming that coordinates are in longitude first notation, i.e. (longitude, latitude).
2017-10-31 11:13:21,741  INFO MatsimResource:108 Resource 'car.png' not found locally. May not be fatal.
2017-10-31 11:13:21,749  INFO MatsimResource:108 Resource 'matsim_logo_transparent.png' not found locally. May not be fatal.
2017-10-31 11:13:21,751  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-10-31 11:13:21,751  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-10-31 11:13:21,751  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2017-10-31 11:13:21,751  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface io.github.agentsoz.bdimatsim.MATSimModel$1$1
2017-10-31 11:13:21,752  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-10-31 11:13:21,752  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-10-31 11:13:21,752  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface io.github.agentsoz.bdimatsim.MATSimModel$1$2
2017-10-31 11:13:21,752  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2017-10-31 11:13:21,752  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-10-31 11:13:21,753  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-10-31 11:13:21,753  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2017-10-31 11:13:21,753  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.withinday.mobsim.MobsimDataProvider
2017-10-31 11:13:21,753  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-10-31 11:13:21,753  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-10-31 11:13:21,753  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2017-10-31 11:13:21,753  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2017-10-31 11:13:21,754  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2017-10-31 11:13:21,754  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2017-10-31 11:13:21,909  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-10-31 11:13:21,909  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-10-31 11:13:21,910  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2017-10-31 11:13:21,910  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2017-10-31 11:13:21,981  INFO QNetsimEngine:515 Assigned 37604 nodes and 73744 links to QSimEngineRunner #0
2017-10-31 11:13:22,121  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2017-10-31 11:13:22,121  INFO Injector:78    -> of(org.matsim.core.router.TripRouterFactoryBuilderWithDefaults$1$1@2bcb6b3d)
2017-10-31 11:13:22,121  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterFactoryBuilderWithDefaults$1.install(TripRouterFactoryBuilderWithDefaults.java:84), instance=org.matsim.core.router.TripRouterFactoryBuilderWithDefaults$1$1@2bcb6b3d}
2017-10-31 11:13:22,121  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2017-10-31 11:13:22,121  INFO Injector:78    -> of(org.matsim.core.trafficmonitoring.FreeSpeedTravelTime@267b5f76)
2017-10-31 11:13:22,121  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterFactoryBuilderWithDefaults$1.install(TripRouterFactoryBuilderWithDefaults.java:92), instance=org.matsim.core.trafficmonitoring.FreeSpeedTravelTime@267b5f76}
2017-10-31 11:13:22,122  INFO Injector:77 org.matsim.api.core.v01.Scenario 
2017-10-31 11:13:22,122  INFO Injector:78    -> of(org.matsim.core.scenario.MutableScenario@9cb8225)
2017-10-31 11:13:22,122  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31), instance=org.matsim.core.scenario.MutableScenario@9cb8225}
2017-10-31 11:13:22,122  INFO Injector:77 org.matsim.api.core.v01.network.Network 
2017-10-31 11:13:22,122  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2017-10-31 11:13:22,122  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2017-10-31 11:13:22,122  INFO Injector:77 org.matsim.api.core.v01.population.Population 
2017-10-31 11:13:22,123  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2017-10-31 11:13:22,123  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2017-10-31 11:13:22,123  INFO Injector:77 org.matsim.api.core.v01.population.PopulationFactory 
2017-10-31 11:13:22,123  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2017-10-31 11:13:22,123  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2017-10-31 11:13:22,123  INFO Injector:77 org.matsim.facilities.ActivityFacilities 
2017-10-31 11:13:22,123  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2017-10-31 11:13:22,124  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2017-10-31 11:13:22,124  INFO Injector:77 org.matsim.households.Households 
2017-10-31 11:13:22,124  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2017-10-31 11:13:22,124  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2017-10-31 11:13:22,124  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-10-31 11:13:22,124  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2017-10-31 11:13:22,124  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2017-10-31 11:13:22,125  INFO Injector:77 org.matsim.lanes.data.Lanes 
2017-10-31 11:13:22,125  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2017-10-31 11:13:22,125  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2017-10-31 11:13:22,125  INFO Injector:77 org.matsim.core.router.MainModeIdentifier 
2017-10-31 11:13:22,125  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@281dbf36}
2017-10-31 11:13:22,125  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2017-10-31 11:13:22,125  INFO Injector:77 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2017-10-31 11:13:22,126  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1f18b4bd[Scopes.SINGLETON]}
2017-10-31 11:13:22,126  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:46), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.FastAStarLandmarksFactory, annotation=[none]]}
2017-10-31 11:13:22,126  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2017-10-31 11:13:22,126  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@10136e9d
2017-10-31 11:13:22,126  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@10136e9d}
2017-10-31 11:13:22,126  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2017-10-31 11:13:22,127  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@14b19b1f
2017-10-31 11:13:22,127  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@14b19b1f}
2017-10-31 11:13:22,127  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2017-10-31 11:13:22,127  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@227abc9d
2017-10-31 11:13:22,127  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@227abc9d}
2017-10-31 11:13:22,127  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2017-10-31 11:13:22,127  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@b8e65eb
2017-10-31 11:13:22,128  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@b8e65eb}
2017-10-31 11:13:22,128  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2017-10-31 11:13:22,128  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@e28581
2017-10-31 11:13:22,128  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@e28581}
2017-10-31 11:13:22,128  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2017-10-31 11:13:22,128  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@18138fe1
2017-10-31 11:13:22,128  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@18138fe1}
2017-10-31 11:13:22,129  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2017-10-31 11:13:22,129  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@6f7a562a
2017-10-31 11:13:22,129  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@6f7a562a}
2017-10-31 11:13:22,129  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2017-10-31 11:13:22,129  INFO Injector:78    -> org.matsim.core.router.NetworkRouting@17a3c713
2017-10-31 11:13:22,129  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRouting@17a3c713}
2017-10-31 11:13:22,129  INFO Injector:77 org.matsim.core.api.experimental.events.EventsManager 
2017-10-31 11:13:22,130  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6ffaa6e0}[Scopes.SINGLETON]
2017-10-31 11:13:22,130  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2017-10-31 11:13:22,130  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,130  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@18138fe1}
2017-10-31 11:13:22,130  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2017-10-31 11:13:22,131  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,131  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@14b19b1f}
2017-10-31 11:13:22,131  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2017-10-31 11:13:22,131  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,131  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRouting@17a3c713}
2017-10-31 11:13:22,131  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2017-10-31 11:13:22,131  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=112, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,131  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=112, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@e28581}
2017-10-31 11:13:22,131  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=112, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2017-10-31 11:13:22,132  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=114, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,132  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=114, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@10136e9d}
2017-10-31 11:13:22,132  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=114, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2017-10-31 11:13:22,132  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=116, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,132  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=116, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@b8e65eb}
2017-10-31 11:13:22,132  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=116, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2017-10-31 11:13:22,132  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=118, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,132  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=118, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@227abc9d}
2017-10-31 11:13:22,133  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=118, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2017-10-31 11:13:22,133  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=120, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,133  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=120, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@6f7a562a}
2017-10-31 11:13:22,133  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=120, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2017-10-31 11:13:22,133  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=122, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,133  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=122, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.trafficmonitoring.FreeSpeedTravelTime@267b5f76}[Scopes.SINGLETON]}
2017-10-31 11:13:22,134  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=122, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2017-10-31 11:13:22,134  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=124, type=MAPBINDER, keyType=java.lang.String)
2017-10-31 11:13:22,134  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=124, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.TripRouterFactoryBuilderWithDefaults$1$1@2bcb6b3d}[Scopes.SINGLETON]}
2017-10-31 11:13:22,134  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=124, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2017-10-31 11:13:22,135  INFO Injector:77 org.matsim.core.router.TripRouter 
2017-10-31 11:13:22,135  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1306c486
2017-10-31 11:13:22,135  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43), scope=Scopes.NO_SCOPE}
2017-10-31 11:13:22,135  INFO Injector:77 org.matsim.core.router.SingleModeNetworksCache 
2017-10-31 11:13:22,135  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@56272ddf[Scopes.SINGLETON]
2017-10-31 11:13:22,135  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47), scope=eager singleton}
2017-10-31 11:13:22,136  INFO Injector:77 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2017-10-31 11:13:22,136  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@c40d6fa[Scopes.SINGLETON]
2017-10-31 11:13:22,136  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.SINGLETON}
2017-10-31 11:13:22,136  INFO Injector:77 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2017-10-31 11:13:22,136  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3637bc34[Scopes.SINGLETON]
2017-10-31 11:13:22,136  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2017-10-31 11:13:22,249  INFO PreProcessDijkstra:118 nodes in dead ends: 9612 (total nodes: 37604). Done in 55 ms
2017-10-31 11:13:22,264  INFO PreProcessLandmarks:112 Putting landmarks on network...
2017-10-31 11:13:22,269  INFO LandmarkerPieSlices:96 Filling sectors...
2017-10-31 11:13:22,324  INFO LandmarkerPieSlices:107 Refining landmarks...
2017-10-31 11:13:22,327  INFO LandmarkerPieSlices:109 done
2017-10-31 11:13:22,327  INFO PreProcessLandmarks:115 done in 62 ms
2017-10-31 11:13:22,328  INFO PreProcessLandmarks:117 Initializing landmarks data
2017-10-31 11:13:22,341  INFO PreProcessLandmarks:129 Calculating distance from each node to each of the 16 landmarks using 8 threads...
2017-10-31 11:13:22,363  INFO PreProcessLandmarks:139 wait for landmarks Calculator to finish...
2017-10-31 11:13:22,665  INFO PreProcessLandmarks:161 done in 324 ms
2017-10-31 11:13:22,672  INFO NetworkImpl:156  node # 1
2017-10-31 11:13:22,672  INFO NetworkImpl:156  node # 2
2017-10-31 11:13:22,672  INFO NetworkImpl:156  node # 4
2017-10-31 11:13:22,672  INFO NetworkImpl:156  node # 8
2017-10-31 11:13:22,672  INFO NetworkImpl:156  node # 16
2017-10-31 11:13:22,672  INFO NetworkImpl:156  node # 32
2017-10-31 11:13:22,673  INFO NetworkImpl:156  node # 64
2017-10-31 11:13:22,673  INFO NetworkImpl:156  node # 128
2017-10-31 11:13:22,673  INFO NetworkImpl:156  node # 256
2017-10-31 11:13:22,673  INFO NetworkImpl:156  node # 512
2017-10-31 11:13:22,673  INFO NetworkImpl:156  node # 1024
2017-10-31 11:13:22,674  INFO NetworkImpl:156  node # 2048
2017-10-31 11:13:22,674  INFO NetworkImpl:156  node # 4096
2017-10-31 11:13:22,675  INFO NetworkImpl:156  node # 8192
2017-10-31 11:13:22,678  INFO NetworkImpl:156  node # 16384
2017-10-31 11:13:22,684  INFO NetworkImpl:156  node # 32768
2017-10-31 11:13:22,686  INFO NetworkImpl:152  link # 1
2017-10-31 11:13:22,687  INFO NetworkImpl:152  link # 2
2017-10-31 11:13:22,687  INFO NetworkImpl:152  link # 4
2017-10-31 11:13:22,687  INFO NetworkImpl:152  link # 8
2017-10-31 11:13:22,687  INFO NetworkImpl:152  link # 16
2017-10-31 11:13:22,687  INFO NetworkImpl:152  link # 32
2017-10-31 11:13:22,688  INFO NetworkImpl:152  link # 64
2017-10-31 11:13:22,688  INFO NetworkImpl:152  link # 128
2017-10-31 11:13:22,689  INFO NetworkImpl:152  link # 256
2017-10-31 11:13:22,690  INFO NetworkImpl:152  link # 512
2017-10-31 11:13:22,693  INFO NetworkImpl:152  link # 1024
2017-10-31 11:13:22,697  INFO NetworkImpl:152  link # 2048
2017-10-31 11:13:22,706  INFO NetworkImpl:152  link # 4096
2017-10-31 11:13:22,716  INFO NetworkImpl:152  link # 8192
2017-10-31 11:13:22,730  INFO NetworkImpl:152  link # 16384
2017-10-31 11:13:22,758  INFO NetworkImpl:152  link # 32768
2017-10-31 11:13:22,821  INFO NetworkImpl:152  link # 65536
2017-10-31 11:13:23,054  INFO PreProcessDijkstra:118 nodes in dead ends: 9612 (total nodes: 37604). Done in 42 ms
2017-10-31 11:13:23,065  INFO PreProcessLandmarks:112 Putting landmarks on network...
2017-10-31 11:13:23,068  INFO LandmarkerPieSlices:96 Filling sectors...
2017-10-31 11:13:23,103  INFO LandmarkerPieSlices:107 Refining landmarks...
2017-10-31 11:13:23,106  INFO LandmarkerPieSlices:109 done
2017-10-31 11:13:23,106  INFO PreProcessLandmarks:115 done in 41 ms
2017-10-31 11:13:23,107  INFO PreProcessLandmarks:117 Initializing landmarks data
2017-10-31 11:13:23,118  INFO PreProcessLandmarks:129 Calculating distance from each node to each of the 16 landmarks using 8 threads...
2017-10-31 11:13:23,128  INFO PreProcessLandmarks:139 wait for landmarks Calculator to finish...
2017-10-31 11:13:23,461  INFO PreProcessLandmarks:161 done in 343 ms
2017-10-31 11:13:23,584  INFO PreProcessDijkstra:118 nodes in dead ends: 9612 (total nodes: 37604). Done in 44 ms
2017-10-31 11:13:23,597  INFO PreProcessLandmarks:112 Putting landmarks on network...
2017-10-31 11:13:23,601  INFO LandmarkerPieSlices:96 Filling sectors...
2017-10-31 11:13:23,630  INFO LandmarkerPieSlices:107 Refining landmarks...
2017-10-31 11:13:23,632  INFO LandmarkerPieSlices:109 done
2017-10-31 11:13:23,632  INFO PreProcessLandmarks:115 done in 34 ms
2017-10-31 11:13:23,632  INFO PreProcessLandmarks:117 Initializing landmarks data
2017-10-31 11:13:23,643  INFO PreProcessLandmarks:129 Calculating distance from each node to each of the 16 landmarks using 8 threads...
2017-10-31 11:13:23,663  INFO PreProcessLandmarks:139 wait for landmarks Calculator to finish...
2017-10-31 11:13:23,933  INFO PreProcessLandmarks:161 done in 290 ms
2017-10-31 11:13:24,041  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 00:00:01 : #links=0 #nodes=0
2017-10-31 11:13:24,042  INFO QSim:487 SIMULATION (NEW QSim) AT 00:00:01 : #Veh=601 lost=0 simT=0.0s realT=4s; (s/r): 0.0
2017-10-31 11:13:24,042  INFO Gbl:52 used RAM: 746297112B = 728805kB = 711MB  free: 298608872B = 284MB  total: 1044905984B = 996MB
2017-10-31 11:13:33,286  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 01:00:00 : #links=0 #nodes=0
2017-10-31 11:13:33,286  INFO QSim:487 SIMULATION (NEW QSim) AT 01:00:00 : #Veh=601 lost=0 simT=3599.0s realT=13s; (s/r): 276.84615384615387
2017-10-31 11:13:33,286  INFO Gbl:52 used RAM: 644642696B = 629533kB = 614MB  free: 778274936B = 742MB  total: 1422917632B = 1357MB
2017-10-31 11:13:42,075  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 02:00:00 : #links=0 #nodes=0
2017-10-31 11:13:42,076  INFO QSim:487 SIMULATION (NEW QSim) AT 02:00:00 : #Veh=601 lost=0 simT=7199.0s realT=22s; (s/r): 327.22727272727275
2017-10-31 11:13:42,076  INFO Gbl:52 used RAM: 808599888B = 789648kB = 771MB  free: 674610864B = 643MB  total: 1483210752B = 1414MB
2017-10-31 11:13:50,761  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 03:00:00 : #links=0 #nodes=0
2017-10-31 11:13:50,761  INFO QSim:487 SIMULATION (NEW QSim) AT 03:00:00 : #Veh=601 lost=0 simT=10799.0s realT=31s; (s/r): 348.35483870967744
2017-10-31 11:13:50,762  INFO Gbl:52 used RAM: 860460984B = 840293kB = 820MB  free: 659449928B = 628MB  total: 1519910912B = 1449MB
2017-10-31 11:13:59,254  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 04:00:00 : #links=0 #nodes=0
2017-10-31 11:13:59,254  INFO QSim:487 SIMULATION (NEW QSim) AT 04:00:00 : #Veh=601 lost=0 simT=14399.0s realT=39s; (s/r): 369.20512820512823
2017-10-31 11:13:59,254  INFO Gbl:52 used RAM: 854596448B = 834566kB = 815MB  free: 675275936B = 643MB  total: 1529872384B = 1459MB
2017-10-31 11:14:07,272  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 05:00:00 : #links=0 #nodes=0
2017-10-31 11:14:07,272  INFO QSim:487 SIMULATION (NEW QSim) AT 05:00:00 : #Veh=601 lost=0 simT=17999.0s realT=47s; (s/r): 382.9574468085106
2017-10-31 11:14:07,272  INFO Gbl:52 used RAM: 816410200B = 797275kB = 778MB  free: 715035048B = 681MB  total: 1531445248B = 1460MB
2017-10-31 11:14:15,297  INFO EventsManagerImpl:134  event # 1
2017-10-31 11:14:15,299  INFO EventsManagerImpl:134  event # 2
2017-10-31 11:14:15,299  INFO EventsManagerImpl:134  event # 4
2017-10-31 11:14:15,300  INFO EventsManagerImpl:134  event # 8
2017-10-31 11:14:15,300  INFO EventsManagerImpl:134  event # 16
2017-10-31 11:14:15,301  INFO EventsManagerImpl:134  event # 32
2017-10-31 11:14:15,302  INFO EventsManagerImpl:134  event # 64
2017-10-31 11:14:15,304  INFO EventsManagerImpl:134  event # 128
2017-10-31 11:14:15,307  INFO EventsManagerImpl:134  event # 256
2017-10-31 11:14:15,310  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 06:00:00 : #links=273 #nodes=0
2017-10-31 11:14:15,310  INFO QSim:487 SIMULATION (NEW QSim) AT 06:00:00 : #Veh=601 lost=0 simT=21599.0s realT=55s; (s/r): 392.7090909090909
2017-10-31 11:14:15,310  INFO Gbl:52 used RAM: 758468856B = 740692kB = 723MB  free: 769306376B = 733MB  total: 1527775232B = 1457MB
2017-10-31 11:14:15,314  INFO EventsManagerImpl:134  event # 512
2017-10-31 11:14:15,319  INFO EventsManagerImpl:134  event # 1024
2017-10-31 11:14:15,327  INFO EventsManagerImpl:134  event # 2048
2017-10-31 11:14:15,436  INFO EventsManagerImpl:134  event # 4096
2017-10-31 11:14:23,471  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=0 #nodes=0
2017-10-31 11:14:23,471  INFO QSim:487 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=1 lost=0 simT=25199.0s realT=63s; (s/r): 399.984126984127
2017-10-31 11:14:23,471  INFO Gbl:52 used RAM: 688510712B = 672373kB = 656MB  free: 740698376B = 706MB  total: 1429209088B = 1363MB
2017-10-31 11:14:29,919  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=0 #nodes=0
2017-10-31 11:14:29,920  INFO QSim:487 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=1 lost=0 simT=28799.0s realT=70s; (s/r): 411.4142857142857
2017-10-31 11:14:29,920  INFO Gbl:52 used RAM: 580202192B = 566603kB = 553MB  free: 852152624B = 812MB  total: 1432354816B = 1366MB
2017-10-31 11:14:33,509  INFO AbstractController$6:222 ### ITERATION 0 fires after mobsim event
2017-10-31 11:14:33,509  INFO Gbl:185 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.475982sec
2017-10-31 11:14:33,509  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2017-10-31 11:14:33,509  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 1 seconds = 00:00:01
2017-10-31 11:14:33,510  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2017-10-31 11:14:33,512  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2017-10-31 11:14:33,513  INFO AbstractController$4:159 ### ITERATION 0 fires scoring event
2017-10-31 11:14:33,513  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2017-10-31 11:14:33,514  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2017-10-31 11:14:33,515  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2017-10-31 11:14:33,516  INFO AbstractController$5:167 ### ITERATION 0 fires iteration end event
2017-10-31 11:14:33,516  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2017-10-31 11:14:33,517  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2017-10-31 11:14:33,518  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2017-10-31 11:14:33,518  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2017-10-31 11:14:33,518  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2017-10-31 11:14:33,519  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2017-10-31 11:14:33,521  INFO ModeStatsControlerListener:153 -- mode share of mode car = 1.0
2017-10-31 11:14:33,521  INFO ModeStatsControlerListener:153 -- mode share of mode pt = 0.0
2017-10-31 11:14:33,521  INFO ModeStatsControlerListener:153 -- mode share of mode walk = 0.0
2017-10-31 11:14:33,521  INFO ModeStatsControlerListener:153 -- mode share of mode bike = 0.0
2017-10-31 11:14:33,522  INFO ModeStatsControlerListener:153 -- mode share of mode ride = 0.0
2017-10-31 11:14:33,522  INFO ModeStatsControlerListener:153 -- mode share of mode other = 0.0
2017-10-31 11:14:33,522  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2017-10-31 11:14:33,522  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 121.90409699549453
2017-10-31 11:14:33,523  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 121.90409699549453
2017-10-31 11:14:33,523  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 121.90409699549453
2017-10-31 11:14:33,523  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 121.90409699549453
2017-10-31 11:14:33,523  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2017-10-31 11:14:33,524  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2017-10-31 11:14:33,525  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2017-10-31 11:14:33,525  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 0.0
2017-10-31 11:14:33,525  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2017-10-31 11:14:33,525  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2017-10-31 11:14:33,525  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2017-10-31 11:14:33,527  INFO LegHistogramListener:72 number of legs:	600	100%
2017-10-31 11:14:33,527  INFO LegHistogramListener:79 number of car legs:	600	100.0%
2017-10-31 11:14:35,489  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2017-10-31 11:14:35,489  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2017-10-31 11:14:35,669  INFO AbstractController:177 ### ITERATION 0 ENDS
2017-10-31 11:14:35,669  INFO AbstractController:178 ###################################################
2017-10-31 11:14:35,669  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2017-10-31 11:14:35,669  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2017-10-31 11:14:35,669  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2017-10-31 11:14:35,670  INFO Counter:61 [PopulationWriter] dumped person # 1
2017-10-31 11:14:35,670  INFO Counter:61 [PopulationWriter] dumped person # 2
2017-10-31 11:14:35,670  INFO Counter:61 [PopulationWriter] dumped person # 4
2017-10-31 11:14:35,670  INFO Counter:61 [PopulationWriter] dumped person # 8
2017-10-31 11:14:35,670  INFO Counter:61 [PopulationWriter] dumped person # 16
2017-10-31 11:14:35,671  INFO Counter:61 [PopulationWriter] dumped person # 32
2017-10-31 11:14:35,671  INFO Counter:61 [PopulationWriter] dumped person # 64
2017-10-31 11:14:35,673  INFO Counter:61 [PopulationWriter] dumped person # 128
2017-10-31 11:14:35,676  INFO Counter:61 [PopulationWriter] dumped person # 256
2017-10-31 11:14:35,681  INFO Counter:61 [PopulationWriter] dumped person # 512
2017-10-31 11:14:35,683  INFO PopulationWriter:139 Population written to: scenarios/maldon/scenario_matsim_output/output_plans.xml.gz
2017-10-31 11:14:35,684  INFO Counter:67 [PopulationWriter] dumped person # 600
2017-10-31 11:14:35,686  INFO NetworkWriter:68 Writing network to file: scenarios/maldon/scenario_matsim_output/output_network.xml.gz...
2017-10-31 11:14:36,347  INFO NetworkWriter:71 done.
2017-10-31 11:14:36,402  INFO VehicleWriterV1:55 Vehicles written to: scenarios/maldon/scenario_matsim_output/output_vehicles.xml.gz
2017-10-31 11:14:36,404  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2017-10-31 11:14:36,406  INFO LanesWriter:65 Using LaneDefinitionWriter20...
2017-10-31 11:14:36,406  INFO LanesWriter:74 writing to file: scenarios/maldon/scenario_matsim_output/output_lanes.xml.gz
2017-10-31 11:14:36,438  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2017-10-31 11:14:36,438  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2017-10-31 11:14:36,438  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2017-10-31 11:14:36,439  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2017-10-31 11:14:36,439  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2017-10-31 11:14:36,439  INFO OutputDirectoryLogging:169 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
