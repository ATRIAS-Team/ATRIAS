<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">


  <groupId>io.github.agentsoz</groupId>
  <artifactId>ees</artifactId>
  <version>2.0.2-SNAPSHOT</version>

  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>

  <name>Emergency Evacuation Simulator</name>
  <description>Understanding community evacuation timing</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipITs>true</skipITs> <!-- skip integration tests by default; enable with -DskipITs=false -->
  </properties>

  <repositories>
    <repository>
      <!-- Geotools is not on Maven central -->
      <id>osgeo</id>
      <name>Geotools repository</name>
      <url>http://download.osgeo.org/webdav/geotools</url>
    </repository>
    <repository>
      <id>matsim</id>
      <url>http://dl.bintray.com/matsim/matsim</url>
    </repository>
    <repository>
      <id>ojo-snapshots</id>
      <url>http://oss.jfrog.org/libs-snapshot</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>io.github.agentsoz</groupId>
      <artifactId>bdi-abm</artifactId>
      <version>2.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.github.agentsoz</groupId>
      <artifactId>abm-jill</artifactId>
      <version>2.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.github.agentsoz</groupId>
      <artifactId>bdi-matsim</artifactId>
      <version>2.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.github.agentsoz</groupId>
      <artifactId>util</artifactId>
      <version>2.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.github.agentsoz</groupId>
      <artifactId>diffusion-model</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <!--test-jar dependencies are not transitive, so they always have to be added where needed. kai, nov'17-->
      <groupId>org.matsim</groupId>
      <artifactId>matsim</artifactId>
      <type>test-jar</type>
      <!-- <version>0.10.0</version> -->
      <version>0.11.0-2018w44</version>
      <scope>test</scope>
    </dependency>
    <!-- logging framework -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <!-- for JSON-style toString() of objects -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.2</version>
    </dependency>
    <!-- JUnit for unit testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <!--<scope>test</scope>-->
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
      <version>1.13</version>
    </dependency>
  </dependencies>


  <build>
	<plugins>
    <!-- Begin SONATYPE setup : http://central.sonatype.org/pages/apache-maven.html -->
    <plugin>
      <groupId>org.sonatype.plugins</groupId>
      <artifactId>nexus-staging-maven-plugin</artifactId>
      <version>1.6.7</version>
      <extensions>true</extensions>
      <configuration>
        <serverId>ossrh</serverId>
        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
        <autoReleaseAfterClose>false</autoReleaseAfterClose>
      </configuration>
    </plugin>
    <!-- Maven release plugin -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-release-plugin</artifactId>
      <version>2.5.3</version>
      <configuration>
        <autoVersionSubmodules>true</autoVersionSubmodules>
        <useReleaseProfile>true</useReleaseProfile>
        <releaseProfiles>release</releaseProfiles>
        <goals>deploy</goals>
      </configuration>
    </plugin>
    <plugin>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.7.0</version>
      <configuration>
        <source>1.8</source>
        <target>1.8</target>
      </configuration>
    </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <useUniqueVersions>false</useUniqueVersions>
              <mainClass>io.github.agentsoz.ees.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <!-- This bit sets the main class for the executable jar as you otherwise -->
                <!-- would with the assembly plugin                                       -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>io.github.agentsoz.ees.Run</Main-Class>
                  </manifestEntries>
                </transformer>
                <!-- This bit merges the various GeoTools META-INF/services files         -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
          <descriptor>src/assembly/minimal.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>create-archive</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.14</version>
        <configuration>
          <organizationName>AgentsOZ</organizationName>
          <copyrightOwners>by its authors. See AUTHORS file.</copyrightOwners>
          <projectName>Emergency Evacuation Simulator</projectName>
          <inceptionYear>2014</inceptionYear>
          <licenseName>lgpl_v3</licenseName>
        </configuration>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-project-license</goal>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <!-- to skip unit test but run integration test use -DskipTests -DskipITs=false -->
          <skipTests>false</skipTests> <!-- don't let -DskipTests influence integration tests -->
          <skipITs>${skipITs}</skipITs><!-- default is to skip; to run use -DskipITs=false -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.20.1</version>
        <configuration>
          <excludes>
            <exclude>**/*$*</exclude> <!-- exclude all inner classes -->
          </excludes>
          <!--execute each test in separate JVM (slow, but otherwise it does not-->
          <!--work, and no problem as long as there are only integration tests):-->
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <!-- avoid out of memory errors: -->
          <argLine>-Xmx4000m -Djava.awt.headless=true -Dmatsim.preferLocalDtds=true </argLine>
        </configuration>
      </plugin>
      <plugin>
        <!--this is because I am re-using the tests in tub-rmit-collab.  kai, nov'17-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
